///////////////////////////////////////////////////////////////////////////
//
//  Autogenerated by bindgen.py
//
///////////////////////////////////////////////////////////////////////////


#pragma once
#ifndef RHI_RAY_H_
#define RHI_RAY_H_


#include "export.h"
#include "enums.h"
#include "structs.h"
#include "ray_enums.h"
#include "ray_structs.h"


#if defined(__cplusplus)
extern "C" {
#endif


#if !defined(RHI_SKIP_DECLARATIONS)

RHI_API bool RHI_isRaytracingSupported(RHI_RendererHandle pRenderer);
RHI_API bool RHI_initRaytracing(RHI_RendererHandle pRenderer, RHI_RaytracingHandle * ppRaytracing);
RHI_API void RHI_removeRaytracing(RHI_RendererHandle pRenderer, RHI_RaytracingHandle pRaytracing);
RHI_API void RHI_addAccelerationStructure(RHI_RaytracingHandle pRaytracing, const RHI_AccelerationStructureDescTop * pDesc, RHI_AccelerationStructureHandle * ppAccelerationStructure);
RHI_API void RHI_removeAccelerationStructure(RHI_RaytracingHandle pRaytracing, RHI_AccelerationStructureHandle pAccelerationStructure);
RHI_API void RHI_addRaytracingShaderTable(RHI_RaytracingHandle pRaytracing, const RHI_RaytracingShaderTableDesc * pDesc, RHI_RaytracingShaderTableHandle * ppTable);
RHI_API void RHI_removeRaytracingShaderTable(RHI_RaytracingHandle pRaytracing, RHI_RaytracingShaderTableHandle pTable);
RHI_API void RHI_cmdBuildAccelerationStructure(RHI_CmdHandle pCmd, RHI_RaytracingHandle pRaytracing, RHI_RaytracingBuildASDesc * pDesc);
RHI_API void RHI_cmdDispatchRays(RHI_CmdHandle pCmd, RHI_RaytracingHandle pRaytracing, const RHI_RaytracingDispatchDesc * pDesc);
#ifdef METAL
RHI_API void RHI_addSSVGFDenoiser(RHI_RendererHandle pRenderer, RHI_SSVGFDenoiser ** ppDenoiser);
#endif // METAL
#ifdef METAL
RHI_API void RHI_removeSSVGFDenoiser(RHI_SSVGFDenoiser * pDenoiser);
#endif // METAL
#ifdef METAL
RHI_API void RHI_clearSSVGFDenoiserTemporalHistory(RHI_SSVGFDenoiser * pDenoiser);
#endif // METAL
#ifdef METAL
RHI_API void RHI_cmdSSVGFDenoise(RHI_CmdHandle pCmd, RHI_SSVGFDenoiser * pDenoiser, RHI_TextureHandle pSourceTexture, RHI_TextureHandle pMotionVectorTexture, RHI_TextureHandle pDepthNormalTexture, RHI_TextureHandle pPreviousDepthNormalTexture, RHI_TextureHandle * ppOut);
#endif // METAL


#endif // !defined(RHI_SKIP_DECLARATIONS)

#if defined(__cplusplus)
} // extern "C"
#endif

#endif // RHI_RAY_H_

