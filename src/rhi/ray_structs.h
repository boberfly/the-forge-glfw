///////////////////////////////////////////////////////////////////////////
//
//  Autogenerated by bindgen.py
//
///////////////////////////////////////////////////////////////////////////


#pragma once
#ifndef RHI_RAY_STRUCTS_H_
#define RHI_RAY_STRUCTS_H_


#include "enums.h"
#include "ray_enums.h"
#include "structs.h"
        



typedef struct RHI_AccelerationStructureInstanceDesc {
    uint32_t mAccelerationStructureIndex;
    float mTransform[12];
    uint32_t mInstanceID;
    uint32_t mInstanceMask;
    uint32_t mInstanceContributionToHitGroupIndex;
    RHI_AccelerationStructureInstanceFlags mFlags;
} RHI_AccelerationStructureInstanceDesc;

typedef struct RHI_AccelerationStructureGeometryDesc {
    RHI_AccelerationStructureGeometryFlags mFlags;
    void * pVertexArray;
    uint32_t mVertexCount;
    union {
        uint32_t * pIndices32;
        uint16_t * pIndices16;
    };
    uint32_t mIndexCount;
    RHI_IndexType mIndexType;
} RHI_AccelerationStructureGeometryDesc;

typedef struct RHI_AccelerationStructureDescBottom {
    RHI_AccelerationStructureBuildFlags mFlags;
    uint32_t mDescCount;
    RHI_AccelerationStructureGeometryDesc * pGeometryDescs;
} RHI_AccelerationStructureDescBottom;

typedef struct RHI_AccelerationStructureDescTop {
    RHI_AccelerationStructureBuildFlags mFlags;
    uint32_t mInstancesDescCount;
    RHI_AccelerationStructureInstanceDesc * pInstanceDescs;
    RHI_AccelerationStructureDescBottom * mBottomASDesc;
    RHI_IndexType mIndexType;
} RHI_AccelerationStructureDescTop;

typedef struct RHI_RaytracingShaderTableDesc {
    RHI_PipelineHandle pPipeline;
    RHI_RootSignatureHandle pGlobalRootSignature;
    const char * pRayGenShader;
    const char ** pMissShaders;
    const char ** pHitGroups;
    uint32_t mMissShaderCount;
    uint32_t mHitGroupCount;
} RHI_RaytracingShaderTableDesc;

typedef struct RHI_RaytracingDispatchDesc {
    uint32_t mWidth;
    uint32_t mHeight;
    RHI_RaytracingShaderTableHandle pShaderTable;
#if defined(METAL)
    RHI_AccelerationStructureHandle pTopLevelAccelerationStructure;
#endif // defined(METAL)
#if defined(METAL)
    RHI_DescriptorSetHandle pSets[4];
#endif // defined(METAL)
#if defined(METAL)
    uint32_t pIndexes[4];
#endif // defined(METAL)
} RHI_RaytracingDispatchDesc;

typedef struct RHI_RaytracingBuildASDesc {
    RHI_AccelerationStructureHandle * ppAccelerationStructures;
    uint32_t mCount;
    uint32_t mBottomASIndicesCount;
    uint32_t * pBottomASIndices;
} RHI_RaytracingBuildASDesc;



#endif // RHI_RAY_STRUCTS_H_

